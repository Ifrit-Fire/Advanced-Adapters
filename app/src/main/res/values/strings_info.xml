<?xml version="1.0" encoding="utf-8"?>
<!--
/**
* By: JaySoyer
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
-->
<resources>

	<string name="info_array_baseadapter_title">Array BaseAdapter</string>
	<string name="info_array_baseadapter_message">
		This is a demonstration of the ArrayBaseAdapter class. It\'s an abstract BaseAdapter that is
		backed by an ArrayList. All subclasses are expected to handle view generation and defining
		the filtering logic.\n
		\n
		The ArrayBaseAdapter is designed to be more flexible then Android\'s ArrayAdapter class and
		be a general goto adapter for most situations. Compared to the standard ArrayAdapter, it
		provides extra features such as:\n
		\n
		\t- Additional methods supporting more ArrayList APIs\n
		\t- Smarter use of notifyDataSetChanged()\n
		\t- LayoutInflater passed to all view creation methods.\n
		\t- Resolves many outstanding filtering issues\n
		\n
		Because the filtering process occurs on a background thread, all mutating methods are
		internally synchronized. This ensures a thread safe environment for write operations. If
		filtering is not required, it\'s strongly recommended to use the SimpleArrayBaseAdapter
		instead.
	</string>

	<string name="info_simplearray_baseadapter_title">SimpleArray BaseAdapter</string>
	<string name="info_simplearray_baseadapter_message">
		A trimmed down version of the ArrayBaseAdapter which is similarly backed by an ArrayList of
		arbitrary objects. By default this class will delegate view generation to subclasses.\n
 		\n
		Designed to be a simple version of it\'s cousin ArrayBaseAdapter, it removes some of the more
		"convenience" method calls while adding support for insertion. The biggest difference is the
		lack of filtering. As a result, there is no need for synchronized blocks which may help
		those worried about performance.\n
		\n
 		If filtering is required, it\'s strongly recommended to use the ArrayBaseAdapter instead.
	</string>

</resources>
